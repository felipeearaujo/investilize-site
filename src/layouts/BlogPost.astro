---
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';
import { Image } from 'astro:assets';
import ArticleSchema from '../components/ArticleSchema.astro'; 
import Breadcrumbs from '../components/Breadcrumbs.astro';

type Props = CollectionEntry<'blog'>['data'];

const { title, description, pubDate, updatedDate, heroImage } = Astro.props;
---
<html lang="pt-br">
    <head>
        <BaseHead title={title} description={description} />       
        <ArticleSchema
            title={title}
            description={description}
            publishDate={pubDate}
            imagePath={heroImage}
        />

        <script type="application/ld+json" is:inline>
        {
          "@context": "https://schema.org",
          "@type": "Organization",
          "name": "Investilize",
          "url": "https://investilize.com.br/",
          "logo": "https://investilize.com.br/logo.png",
          "sameAs": [
            "https://www.instagram.com/seu_perfil_aqui",
            "https://www.facebook.com/sua_pagina_aqui",
            "https://www.linkedin.com/company/seu_perfil_aqui"
          ]
        }
        </script>

        <style>
            main {
                width: calc(100% - 2em);
                max-width: 100%;
                margin: 0;
            }
            .hero-image {
                width: 100%;
            }
            .hero-image img {
                display: block;
                margin: 0 auto;
                border-radius: 12px;
                box-shadow: var(--box-shadow);
                max-width: 100%;
                height: auto;
            }
            .prose {
                width: 720px;
                max-width: calc(100% - 2em);
                margin: auto;
                padding: 1em;
                color: rgb(var(--gray-dark));
            }
            .title {
                margin-bottom: 1em;
                padding: 1em 0;
                text-align: center;
                line-height: 1;
            }
            .title h1 {
                margin: 0 0 0.5em 0;
            }
            .date {
                margin-bottom: 0.5em;
                color: rgb(var(--gray));
            }
            .last-updated-on {
                font-style: italic;
            }
        </style>
    </head>

    <body>
        <Header />
        <main>
            <article>
                <div class="hero-image">
                    {/* Esta linha está sintaticamente correta para renderização condicional */}
                    {heroImage && <Image width={1020} height={510} src={heroImage} alt={title} />}
                </div>
                <div class="prose">
                    <Breadcrumbs />
                    <div class="title">
                        <div class="date">
                            <FormattedDate date={pubDate} />
                            {
                                updatedDate && (
                                    <div class="last-updated-on">
                                        Last updated on <FormattedDate date={updatedDate} />
                                    </div>
                                )
                            }
                        </div>
                        <h1>{title}</h1>
                        <hr />
                    </div>
                    <slot />
                </div>
            </article>
        </main>
        <Footer />
    </body>
</html>